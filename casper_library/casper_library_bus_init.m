function casper_library_bus_init()

	warning off Simulink:Engine:MdlFileShadowing;
	mdl = new_system('casper_library_bus', 'Library');
	blk = get(mdl,'Name');
	% Set the EnableLBRepository property to on
	try
	  set_param(mdl, 'EnableLBRepository', 'on');
	catch
	  % ignore
	end
	warning on Simulink:Engine:MdlFileShadowing;

	add_block('built-in/SubSystem', [blk,'/bus_addsub']);
	bus_addsub_gen([blk,'/bus_addsub']);
	set_param([blk,'/bus_addsub'], ...
		'opmode', sprintf('0'), ...
		'n_bits_a', sprintf('0'), ...
		'bin_pt_a', sprintf('3'), ...
		'type_a', sprintf('1'), ...
		'n_bits_b', sprintf('4'), ...
		'bin_pt_b', sprintf('3'), ...
		'type_b', sprintf('1'), ...
		'cmplx', sprintf('on'), ...
		'misc', sprintf('on'), ...
		'async', sprintf('off'), ...
		'floating_point', sprintf('off'), ...
		'float_type', sprintf('single'), ...
		'exp_width', sprintf('6'), ...
		'frac_width', sprintf('19'), ...
		'n_bits_out', sprintf('8'), ...
		'bin_pt_out', sprintf('3'), ...
		'type_out', sprintf('1'), ...
		'quantization', sprintf('0'), ...
		'overflow', sprintf('1'), ...
		'add_implementation', sprintf('fabric core'), ...
		'latency', sprintf('1'), ...
		'Position', sprintf('[20 17 95 93]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_register']);
	bus_register_gen([blk,'/bus_register']);
	set_param([blk,'/bus_register'], ...
		'reset', sprintf('on'), ...
		'enable', sprintf('on'), ...
		'cmplx', sprintf('on'), ...
		'n_bits', sprintf('[]'), ...
		'misc', sprintf('on'), ...
		'Position', sprintf('[120 17 195 93]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_mux']);
	bus_mux_gen([blk,'/bus_mux']);
	set_param([blk,'/bus_mux'], ...
		'n_inputs', sprintf('0'), ...
		'n_bits', sprintf('8'), ...
		'mux_latency', sprintf('0'), ...
		'cmplx', sprintf('off'), ...
		'misc', sprintf('off'), ...
		'Position', sprintf('[20 132 95 208]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_mult']);
	bus_mult_gen([blk,'/bus_mult']);
	set_param([blk,'/bus_mult'], ...
		'n_bits_a', sprintf('0'), ...
		'bin_pt_a', sprintf('4'), ...
		'type_a', sprintf('1'), ...
		'cmplx_a', sprintf('on'), ...
		'n_bits_b', sprintf('4'), ...
		'bin_pt_b', sprintf('3'), ...
		'type_b', sprintf('1'), ...
		'cmplx_b', sprintf('on'), ...
		'misc', sprintf('on'), ...
		'floating_point', sprintf('on'), ...
		'float_type', sprintf('single'), ...
		'input_vec_a', sprintf('1'), ...
		'input_vec_b', sprintf('1'), ...
		'frac_width', sprintf('19'), ...
		'exp_width', sprintf('6'), ...
		'n_bits_out', sprintf('12'), ...
		'bin_pt_out', sprintf('7'), ...
		'type_out', sprintf('1'), ...
		'quantization', sprintf('0'), ...
		'overflow', sprintf('0'), ...
		'mult_latency', sprintf('3'), ...
		'add_latency', sprintf('1'), ...
		'conv_latency', sprintf('1'), ...
		'max_fanout', sprintf('2'), ...
		'fan_latency', sprintf('0'), ...
		'multiplier_implementation', sprintf('behavioral HDL'), ...
		'Position', sprintf('[120 132 195 208]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_replicate']);
	bus_replicate_gen([blk,'/bus_replicate']);
	set_param([blk,'/bus_replicate'], ...
		'replication', sprintf('0'), ...
		'latency', sprintf('0'), ...
		'misc', sprintf('on'), ...
		'implementation', sprintf('core'), ...
		'Position', sprintf('[220 17 295 93]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_logical']);
	bus_logical_gen([blk,'/bus_logical']);
	set_param([blk,'/bus_logical'], ...
		'logical_function', sprintf('AND'), ...
		'align_bp', sprintf('on'), ...
		'latency', sprintf('1'), ...
		'n_bits_a', sprintf('[]'), ...
		'bin_pt_a', sprintf('3'), ...
		'type_a', sprintf('1'), ...
		'n_bits_b', sprintf('4'), ...
		'bin_pt_b', sprintf('3'), ...
		'type_b', sprintf('1'), ...
		'cmplx', sprintf('on'), ...
		'en', sprintf('on'), ...
		'misc', sprintf('on'), ...
		'n_bits_out', sprintf('8'), ...
		'bin_pt_out', sprintf('3'), ...
		'type_out', sprintf('1'), ...
		'Position', sprintf('[20 252 95 328]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_convert']);
	bus_convert_gen([blk,'/bus_convert']);
	set_param([blk,'/bus_convert'], ...
		'n_bits_in', sprintf('[]'), ...
		'bin_pt_in', sprintf('8'), ...
		'cmplx', sprintf('off'), ...
		'n_bits_out', sprintf('8'), ...
		'bin_pt_out', sprintf('4'), ...
		'quantization', sprintf('1'), ...
		'overflow', sprintf('1'), ...
		'latency', sprintf('2'), ...
		'of', sprintf('on'), ...
		'misc', sprintf('on'), ...
		'Position', sprintf('[220 132 295 208]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_negate']);
	bus_negate_gen([blk,'/bus_negate']);
	set_param([blk,'/bus_negate'], ...
		'n_bits_in', sprintf('0'), ...
		'bin_pt_in', sprintf('8'), ...
		'cmplx', sprintf('off'), ...
		'misc', sprintf('off'), ...
		'floating_point', sprintf('on'), ...
		'float_type', sprintf('single'), ...
		'exp_width', sprintf('8'), ...
		'frac_width', sprintf('24'), ...
		'overflow', sprintf('1'), ...
		'latency', sprintf('2'), ...
		'Position', sprintf('[120 252 195 328]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_accumulator']);
	bus_accumulator_gen([blk,'/bus_accumulator']);
	set_param([blk,'/bus_accumulator'], ...
		'reset', sprintf('on'), ...
		'enable', sprintf('on'), ...
		'n_bits_in', sprintf('[]'), ...
		'bin_pt_in', sprintf('3'), ...
		'type_in', sprintf('1'), ...
		'cmplx', sprintf('on'), ...
		'n_bits_out', sprintf('16'), ...
		'overflow', sprintf('1'), ...
		'misc', sprintf('on'), ...
		'Position', sprintf('[320 17 395 93]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_relational']);
	bus_relational_gen([blk,'/bus_relational']);
	set_param([blk,'/bus_relational'], ...
		'n_bits_a', sprintf('0'), ...
		'bin_pt_a', sprintf('0'), ...
		'type_a', sprintf('1'), ...
		'n_bits_b', sprintf('8'), ...
		'bin_pt_b', sprintf('0'), ...
		'type_b', sprintf('1'), ...
		'en', sprintf('off'), ...
		'misc', sprintf('off'), ...
		'mode', sprintf('a=b'), ...
		'latency', sprintf('1'), ...
		'Position', sprintf('[220 252 295 328]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_scale']);
	bus_scale_gen([blk,'/bus_scale']);
	set_param([blk,'/bus_scale'], ...
		'n_bits_in', sprintf('[]'), ...
		'bin_pt_in', sprintf('8'), ...
		'type_in', sprintf('1'), ...
		'cmplx', sprintf('off'), ...
		'scale_factor', sprintf('2'), ...
		'misc', sprintf('on'), ...
		'Position', sprintf('[320 132 395 208]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_single_port_ram']);
	bus_single_port_ram_gen([blk,'/bus_single_port_ram']);
	set_param([blk,'/bus_single_port_ram'], ...
		'n_bits', sprintf('0'), ...
		'bin_pts', sprintf('17'), ...
		'init_vector', sprintf('[[-2:1/(2^10):2-(1/(2^10))]'']'), ...
		'max_fanout', sprintf('4'), ...
		'mem_type', sprintf('Block RAM'), ...
		'bram_optimization', sprintf('Speed'), ...
		'async', sprintf('off'), ...
		'misc', sprintf('off'), ...
		'bram_latency', sprintf('2'), ...
		'fan_latency', sprintf('1'), ...
		'addr_register', sprintf('on'), ...
		'addr_implementation', sprintf('core'), ...
		'din_register', sprintf('on'), ...
		'din_implementation', sprintf('core'), ...
		'we_register', sprintf('on'), ...
		'we_implementation', sprintf('core'), ...
		'en_register', sprintf('on'), ...
		'en_implementation', sprintf('core'), ...
		'Position', sprintf('[20 372 95 448]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_maddsub']);
	bus_maddsub_gen([blk,'/bus_maddsub']);
	set_param([blk,'/bus_maddsub'], ...
		'n_bits_a', sprintf('0'), ...
		'bin_pt_a', sprintf('7'), ...
		'type_a', sprintf('1'), ...
		'cmplx_a', sprintf('on'), ...
		'n_bits_b', sprintf('[18 18]'), ...
		'bin_pt_b', sprintf('17'), ...
		'type_b', sprintf('1'), ...
		'mult_latency', sprintf('3'), ...
		'multiplier_implementation', sprintf('behavioral HDL'), ...
		'replication_ab', sprintf('on'), ...
		'opmode', sprintf('Addition'), ...
		'n_bits_c', sprintf('[4 4 4 4]'), ...
		'bin_pt_c', sprintf('3'), ...
		'type_c', sprintf('0'), ...
		'add_implementation', sprintf('behavioral HDL'), ...
		'add_latency', sprintf('1'), ...
		'async_add', sprintf('on'), ...
		'align_c', sprintf('off'), ...
		'replication_c', sprintf('off'), ...
		'n_bits_out', sprintf('26'), ...
		'bin_pt_out', sprintf('24'), ...
		'type_out', sprintf('1'), ...
		'quantization', sprintf('0'), ...
		'overflow', sprintf('0'), ...
		'max_fanout', sprintf('2'), ...
		'Position', sprintf('[120 372 195 448]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_dual_port_ram']);
	bus_dual_port_ram_gen([blk,'/bus_dual_port_ram']);
	set_param([blk,'/bus_dual_port_ram'], ...
		'n_bits', sprintf('0'), ...
		'bin_pts', sprintf('17'), ...
		'init_vector', sprintf('[[-2:1/(2^10):2-(1/(2^10))]'']'), ...
		'max_fanout', sprintf('4'), ...
		'mem_type', sprintf('Block RAM'), ...
		'bram_optimization', sprintf('Area'), ...
		'async_a', sprintf('off'), ...
		'async_b', sprintf('off'), ...
		'b_to_a_ratio_bits', sprintf('0'), ...
		'misc', sprintf('off'), ...
		'bram_latency', sprintf('2'), ...
		'fan_latency', sprintf('1'), ...
		'addra_register', sprintf('off'), ...
		'addra_implementation', sprintf('core'), ...
		'dina_register', sprintf('off'), ...
		'dina_implementation', sprintf('core'), ...
		'wea_register', sprintf('off'), ...
		'wea_implementation', sprintf('core'), ...
		'ena_register', sprintf('off'), ...
		'ena_implementation', sprintf('core'), ...
		'addrb_register', sprintf('off'), ...
		'addrb_implementation', sprintf('core'), ...
		'dinb_register', sprintf('off'), ...
		'dinb_implementation', sprintf('core'), ...
		'web_register', sprintf('off'), ...
		'web_implementation', sprintf('core'), ...
		'enb_register', sprintf('off'), ...
		'enb_implementation', sprintf('core'), ...
		'Position', sprintf('[320 254 395 330]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_delay']);
	bus_delay_gen([blk,'/bus_delay']);
	set_param([blk,'/bus_delay'], ...
		'n_bits', sprintf('8'), ...
		'latency', sprintf('-1'), ...
		'cmplx', sprintf('off'), ...
		'enable', sprintf('off'), ...
		'reg_retiming', sprintf('on'), ...
		'misc', sprintf('off'), ...
		'Position', sprintf('[220 372 295 448]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_adder_tree']);
	bus_adder_tree_gen([blk,'/bus_adder_tree']);
	set_param([blk,'/bus_adder_tree'], ...
		'n_busses', sprintf('0'), ...
		'n_bits', sprintf('8'), ...
		'bin_pts', sprintf('0'), ...
		'dtypes', sprintf('0'), ...
		'add_latency', sprintf('1'), ...
		'first_stage_hdl', sprintf('on'), ...
		'adder_imp', sprintf('Behavioral'), ...
		'misc', sprintf('off'), ...
		'Position', sprintf('[20 492 95 568]'), ...
		'Tag', sprintf(''));

	add_block('built-in/SubSystem', [blk,'/bus_constant']);
	bus_constant_gen([blk,'/bus_constant']);
	set_param([blk,'/bus_constant'], ...
		'values', sprintf('[]'), ...
		'n_bits', sprintf('[8]'), ...
		'bin_pts', sprintf('[7]'), ...
		'types', sprintf('[1]'), ...
		'Position', sprintf('[320 372 395 448]'), ...
		'Tag', sprintf(''));

	set_param(blk, ...
		'Name', sprintf('casper_library_bus'), ...
		'LibraryType', sprintf('BlockLibrary'), ...
		'Lock', sprintf('off'), ...
		'PreSaveFcn', sprintf('mdl2m(gcs, ''library'', ''on'');'), ...
		'SolverName', sprintf('ode45'), ...
		'SolverMode', sprintf('MultiTasking'), ...
		'StartTime', sprintf('0.0'), ...
		'StopTime', sprintf('10.0'));
	save_system(mdl,[getenv('MLIB_DEVEL_PATH'), '/casper_library/', 'casper_library_bus']);
end % casper_library_bus_init

function bus_addsub_gen(blk)

	bus_addsub_mask(blk);
	bus_addsub_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_addsub_init(gcb, ...\n    ''opmode'', opmode, ...\n    ''n_bits_a'', n_bits_a, ...\n    ''bin_pt_a'', bin_pt_a, ...\n    ''type_a'', type_a, ...\n    ''n_bits_b'', n_bits_b, ...\n    ''bin_pt_b'', bin_pt_b, ...\n    ''type_b'', type_b, ...\n    ''n_bits_out'', n_bits_out, ...\n    ''bin_pt_out'', bin_pt_out, ...\n    ''floating_point'', floating_point, ...\n    ''float_type'', float_type, ...\n    ''exp_width'', exp_width, ...\n    ''frac_width'', frac_width, ...\n    ''type_out'', type_out, ...\n    ''overflow'', overflow, ...        \n    ''quantization'', quantization, ...\n    ''add_implementation'', add_implementation, ...\n    ''latency'', latency, ...\n    ''cmplx'', cmplx, ...\n    ''misc'', misc, ...\n    ''async'', async);'));

end % bus_addsub_gen

function bus_addsub_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_addsub'), ...
		'MaskDescription', sprintf('Add/subtract components of two busses'), ...
		'MaskPromptString', sprintf('mode (Addition=0, Subtraction=1)|a input bit widths|a input binary points |a input type (Unsigned=0, Signed=1)|b input bit widths|b input binary points|b input type (Unsigned=0, Signed=1)|complex|misc support|asynchronous operation|floating point|float_type|exponent width|fraction width|output bit widths|output binary points|output type (Unsigned=0, Signed=1)|quantization strategy (Truncate=0, Round  (unbiased: +/- Inf)=1)|overflow strategy (Wrap=0, Saturate=1, Flag as error=2)|adder implementation|latency'), ...
		'MaskStyleString', sprintf('edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,checkbox,checkbox,radiobutton(single|custom),edit,edit,edit,edit,edit,edit,edit,popup(behavioral HDL|fabric core|DSP48 core),edit'), ...
		'MaskCallbackString', sprintf('||||||||||onoff = get_param(gcb, ''floating_point'');\nif strcmp(onoff,''on'')\n    enable_fixpt = ''off''\n    set_param_state(gcb, ''float_type'', ''on'')\n    \n    f_type = get_param(gcb, ''float_type'')\n    if strcmp(f_type,''custom'')\n        set_param_state(gcb, ''exp_width'', ''on'')\n        set_param_state(gcb, ''frac_width'', ''on'')\n    else\n        set_param_state(gcb, ''exp_width'', ''off'')\n        set_param_state(gcb, ''frac_width'', ''off'')\n    end\n    \n    \nelse\n    enable_fixpt = ''on''\n    set_param_state(gcb, ''float_type'', ''off'')\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\nend\n\nset_param_state(gcb, ''n_bits_a'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_a'', enable_fixpt)\nset_param_state(gcb, ''type_a'', enable_fixpt)\nset_param_state(gcb, ''n_bits_b'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_b'', enable_fixpt)\nset_param_state(gcb, ''type_b'', enable_fixpt)\n\nset_param_state(gcb, ''n_bits_out'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_out'', enable_fixpt)\nset_param_state(gcb, ''type_out'', enable_fixpt)\nset_param_state(gcb, ''quantization'', enable_fixpt)\nset_param_state(gcb, ''overflow'', enable_fixpt)\n|f_type = get_param(gcb, ''float_type'')\nif strcmp(f_type,''custom'')\n    set_param_state(gcb, ''exp_width'', ''on'')\n    set_param_state(gcb, ''frac_width'', ''on'')\nelse\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\nend|||||||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on,on,on,on,on,on,on,off,off,off,on,on,on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVariables', sprintf('opmode=@1;n_bits_a=@2;bin_pt_a=@3;type_a=@4;n_bits_b=@5;bin_pt_b=@6;type_b=@7;cmplx=&8;misc=&9;async=&10;floating_point=@11;float_type=@12;exp_width=@13;frac_width=@14;n_bits_out=@15;bin_pt_out=@16;type_out=@17;quantization=@18;overflow=@19;add_implementation=&20;latency=@21;'), ...
		'MaskValueString', sprintf('0|0|3|1|4|3|1|on|on|off|off|single|6|19|8|3|1|0|1|fabric core|1'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_addsub_mask

function bus_addsub_init(blk)

end % bus_addsub_init

function bus_register_gen(blk)

	bus_register_mask(blk);
	bus_register_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_register_init(gcb, ...\n    ''reset'', reset, ...\n    ''enable'', enable, ...\n    ''cmplx'', cmplx, ...\n    ''n_bits'', n_bits, ...\n    ''misc'', misc);'));

end % bus_register_gen

function bus_register_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_register'), ...
		'MaskDescription', sprintf('Register components of bus'), ...
		'MaskPromptString', sprintf('reset port|enable port|complex data|input bit widths|misc support'), ...
		'MaskStyleString', sprintf('checkbox,checkbox,checkbox,edit,checkbox'), ...
		'MaskCallbackString', sprintf('||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on'), ...
		'MaskVariables', sprintf('reset=&1;enable=&2;cmplx=&3;n_bits=@4;misc=&5;'), ...
		'MaskValueString', sprintf('on|on|on|[]|on'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_register_mask

function bus_register_init(blk)

end % bus_register_init

function bus_mux_gen(blk)

	bus_mux_mask(blk);
	bus_mux_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_mux_init(gcb, ...\n    ''n_inputs'', n_inputs, ...\n    ''n_bits'', n_bits, ...\n    ''cmplx'', cmplx, ...\n    ''misc'', misc, ...\n    ''mux_latency'', mux_latency);'));

end % bus_mux_gen

function bus_mux_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_mux'), ...
		'MaskDescription', sprintf('Mux components of bus'), ...
		'MaskPromptString', sprintf('number of inputs|input bit widths|mux latency|complex data|misc support'), ...
		'MaskStyleString', sprintf('edit,edit,edit,checkbox,checkbox'), ...
		'MaskTabNameString', sprintf('input,input,latency,input,input'), ...
		'MaskCallbackString', sprintf('||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on'), ...
		'MaskVariables', sprintf('n_inputs=@1;n_bits=@2;mux_latency=@3;cmplx=&4;misc=&5;'), ...
		'MaskValueString', sprintf('0|8|0|off|off'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_mux_mask

function bus_mux_init(blk)

end % bus_mux_init

function bus_mult_gen(blk)

	bus_mult_mask(blk);
	bus_mult_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_mult_init(gcb, ...\n    ''n_bits_a'', n_bits_a, ...\n    ''bin_pt_a'', bin_pt_a, ...\n    ''type_a'', type_a, ...\n    ''cmplx_a'', cmplx_a, ...\n    ''n_bits_b'', n_bits_b, ...\n    ''bin_pt_b'', bin_pt_b, ...\n    ''type_b'', type_b, ...\n    ''cmplx_b'', cmplx_b, ...\n    ''n_bits_out'', n_bits_out, ...\n    ''bin_pt_out'', bin_pt_out, ...\n    ''type_out'', type_out, ...\n    ''floating_point'', floating_point, ...\n    ''float_type'', float_type, ...\n    ''exp_width'', exp_width, ...\n    ''input_vec_a'', input_vec_a, ...\n    ''input_vec_b'', input_vec_b, ...\n    ''frac_width'', frac_width, ...         \n    ''quantization'', quantization, ...\n    ''overflow'', overflow, ...\n    ''mult_latency'', mult_latency, ...\n    ''add_latency'', add_latency, ...\n    ''conv_latency'', conv_latency, ...\n    ''max_fanout'', max_fanout, ...\n    ''fan_latency'', fan_latency, ...\n    ''multiplier_implementation'', multiplier_implementation, ...\n    ''misc'', misc);'));

end % bus_mult_gen

function bus_mult_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_mult'), ...
		'MaskDescription', sprintf('Multiply components of two busses'), ...
		'MaskPromptString', sprintf('a input bit widths|a input binary points |a input type (Unsigned=0, Signed=1)|a input complex|b input bit widths|b input binary points|b input type (Unsigned=0, Signed=1)|b input complex|misc support|floating point|float type|a input vector in bus|b input vector in bus|fraction width|exponent width|output bit widths|output binary points|output type (Unsigned=0, Signed=1)|quantization strategy (Truncate=0, Round  (unbiased: +/- Inf)=1)|overflow strategy (Wrap=0, Saturate=1, Flag as error=2)|multiplier latency|adder latency|convert latency|limit fanout to ?|fanout register latency|multiplier implementation'), ...
		'MaskStyleString', sprintf('edit,edit,edit,checkbox,edit,edit,edit,checkbox,checkbox,checkbox,radiobutton(single|custom),edit,edit,edit,edit,edit,edit,edit,edit,edit,edit,edit,edit,edit,edit,popup(behavioral HDL|standard core|embedded multiplier core)'), ...
		'MaskCallbackString', sprintf('|||||||||onoff = get_param(gcb, ''floating_point'');\nif strcmp(onoff,''on'')\n    enable_fixpt = ''off''\n    set_param_state(gcb, ''float_type'', ''on'')\n    \n    set_param_state(gcb, ''input_vec_a'', ''on'')\n    set_param_state(gcb, ''input_vec_b'', ''on'')\n    \n    f_type = get_param(gcb, ''float_type'')\n    if strcmp(f_type,''custom'')\n        set_param_state(gcb, ''exp_width'', ''on'')\n        set_param_state(gcb, ''frac_width'', ''on'')\n    else\n        set_param_state(gcb, ''exp_width'', ''off'')\n        set_param_state(gcb, ''frac_width'', ''off'')\n    end\n   \nelse\n    enable_fixpt = ''on''\n    set_param_state(gcb, ''float_type'', ''off'')\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\n    set_param_state(gcb, ''input_vec_a'', ''off'')\n    set_param_state(gcb, ''input_vec_b'', ''off'')\nend\n\nset_param_state(gcb, ''n_bits_a'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_a'', enable_fixpt)\nset_param_state(gcb, ''type_a'', enable_fixpt)\nset_param_state(gcb, ''n_bits_b'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_b'', enable_fixpt)\nset_param_state(gcb, ''type_b'', enable_fixpt)\n\nset_param_state(gcb, ''n_bits_out'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_out'', enable_fixpt)\nset_param_state(gcb, ''type_out'', enable_fixpt)\nset_param_state(gcb, ''quantization'', enable_fixpt)\nset_param_state(gcb, ''overflow'', enable_fixpt)\n\n\n\n\n\n|f_type = get_param(gcb, ''float_type'')\nif strcmp(f_type,''custom'')\n    set_param_state(gcb, ''exp_width'', ''on'')\n    set_param_state(gcb, ''frac_width'', ''on'')\nelse\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\nend|||||||||||||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVariables', sprintf('n_bits_a=@1;bin_pt_a=@2;type_a=@3;cmplx_a=&4;n_bits_b=@5;bin_pt_b=@6;type_b=@7;cmplx_b=&8;misc=&9;floating_point=@10;float_type=@11;input_vec_a=@12;input_vec_b=@13;frac_width=@14;exp_width=@15;n_bits_out=@16;bin_pt_out=@17;type_out=@18;quantization=@19;overflow=@20;mult_latency=@21;add_latency=@22;conv_latency=@23;max_fanout=@24;fan_latency=@25;multiplier_implementation=&26;'), ...
		'MaskValueString', sprintf('0|4|1|on|4|3|1|on|on|on|single|1|1|19|6|12|7|1|0|0|3|1|1|2|0|behavioral HDL'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_mult_mask

function bus_mult_init(blk)

end % bus_mult_init

function bus_replicate_gen(blk)

	bus_replicate_mask(blk);
	bus_replicate_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_replicate_init(gcb, ...\n    ''replication'', replication, ...\n    ''latency'', latency, ...\n    ''implementation'', implementation, ...\n    ''misc'', misc);'));

end % bus_replicate_gen

function bus_replicate_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_replicate'), ...
		'MaskDescription', sprintf('Output bus formed by replicating input bus a number of times'), ...
		'MaskPromptString', sprintf('replication factor|latency|misc support|delay implementation'), ...
		'MaskStyleString', sprintf('edit,edit,checkbox,popup(core|behavioral)'), ...
		'MaskCallbackString', sprintf('|||'), ...
		'MaskEnableString', sprintf('on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on'), ...
		'MaskVariables', sprintf('replication=@1;latency=@2;misc=&3;implementation=&4;'), ...
		'MaskValueString', sprintf('0|0|on|core'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_replicate_mask

function bus_replicate_init(blk)

end % bus_replicate_init

function bus_logical_gen(blk)

	bus_logical_mask(blk);
	bus_logical_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_logical_init(gcb, ...\n    ''logical_function'', logical_function, ...\n    ''en'', en, ...\n    ''n_bits_a'', n_bits_a, ...\n    ''bin_pt_a'', bin_pt_a, ...\n    ''type_a'', type_a, ...\n    ''n_bits_b'', n_bits_b, ...\n    ''bin_pt_b'', bin_pt_b, ...\n    ''type_b'', type_b, ...\n    ''n_bits_out'', n_bits_out, ...\n    ''bin_pt_out'', bin_pt_out, ...\n    ''type_out'', type_out, ...\n    ''latency'', latency, ...\n    ''cmplx'', cmplx, ...\n    ''align_bp'', align_bp, ...\n    ''misc'', misc);'));

end % bus_logical_gen

function bus_logical_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_logical'), ...
		'MaskDescription', sprintf('Form the logical product of two busses'), ...
		'MaskPromptString', sprintf('logical function|align binary point|latency|a input bit widths|a input binary points |a input type (Unsigned=0, Signed=1)|b input bit widths|b input binary points|b input type (Unsigned=0, Signed=1)|complex|en port|misc support|output bit widths|output binary points|output type (Unsigned=0, Signed=1)'), ...
		'MaskStyleString', sprintf('popup(AND|NAND|OR|NOR|XOR|XNOR),checkbox,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,checkbox,edit,edit,edit'), ...
		'MaskTabNameString', sprintf('operation,operation,operation,input,input,input,input,input,input,input,input,input,output,output,output'), ...
		'MaskCallbackString', sprintf('||||||||||||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on,on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVariables', sprintf('logical_function=&1;align_bp=&2;latency=@3;n_bits_a=@4;bin_pt_a=@5;type_a=@6;n_bits_b=@7;bin_pt_b=@8;type_b=@9;cmplx=&10;en=&11;misc=&12;n_bits_out=@13;bin_pt_out=@14;type_out=@15;'), ...
		'MaskValueString', sprintf('AND|on|1|[]|3|1|4|3|1|on|on|on|8|3|1'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_logical_mask

function bus_logical_init(blk)

end % bus_logical_init

function bus_convert_gen(blk)

	bus_convert_mask(blk);
	bus_convert_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_convert_init(gcb, ...\n    ''n_bits_in'', n_bits_in, ...\n    ''bin_pt_in'', bin_pt_in, ...\n    ''cmplx'', cmplx, ...\n    ''n_bits_out'', n_bits_out, ...\n    ''bin_pt_out'', bin_pt_out, ...\n    ''quantization'', quantization, ...\n    ''overflow'', overflow, ...\n    ''latency'', latency, ...\n    ''misc'', misc, ...\n    ''of'', of);'));

end % bus_convert_gen

function bus_convert_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_convert'), ...
		'MaskDescription', sprintf('Convert components of busses'), ...
		'MaskPromptString', sprintf('input bit widths|input binary points |input complex|output bit widths|output binary points|quantization strategy (Truncate=0, Round  (unbiased: +/- Inf)=1, Round (unbiased: Even Values)=2)|overflow strategy (Wrap=0, Saturate=1, Flag as error=2)|latency|overflow indication|misc support'), ...
		'MaskStyleString', sprintf('edit,edit,checkbox,edit,edit,edit,edit,edit,checkbox,checkbox'), ...
		'MaskTabNameString', sprintf('input,input,input,output,output,output,output,operation,operation,input'), ...
		'MaskCallbackString', sprintf('|||||||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVariables', sprintf('n_bits_in=@1;bin_pt_in=@2;cmplx=&3;n_bits_out=@4;bin_pt_out=@5;quantization=@6;overflow=@7;latency=@8;of=&9;misc=&10;'), ...
		'MaskValueString', sprintf('[]|8|off|8|4|1|1|2|on|on'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_convert_mask

function bus_convert_init(blk)

end % bus_convert_init

function bus_negate_gen(blk)

	bus_negate_mask(blk);
	bus_negate_init(blk);
	set_param(blk, ...
		'MaskInitialization', sprintf('bus_negate_init(gcb, ...\n    ''n_bits_in'', n_bits_in, ...\n    ''bin_pt_in'', bin_pt_in, ...\n    ''floating_point'', floating_point, ...\n    ''float_type'', float_type, ...\n    ''exp_width'', exp_width, ...\n    ''frac_width'', frac_width, ...      \n    ''cmplx'', cmplx, ...\n    ''overflow'', overflow, ...\n    ''latency'', latency, ...\n    ''misc'', misc);'));

end % bus_negate_gen

function bus_negate_mask(blk)

	set_param(blk, ...
		'Mask', sprintf('on'), ...
		'MaskSelfModifiable', sprintf('on'), ...
		'MaskType', sprintf('bus_negate'), ...
		'MaskDescription', sprintf('Negate components of busses'), ...
		'MaskPromptString', sprintf('input bit widths|input binary points |input complex|misc support|floating point|float type|exponent width|fraction width|overflow strategy (Wrap=0, Saturate=1, Flag as error=2)|latency'), ...
		'MaskStyleString', sprintf('edit,edit,checkbox,checkbox,checkbox,radiobutton(single|custom),edit,edit,edit,edit'), ...
		'MaskCallbackString', sprintf('||||onoff = get_param(gcb, ''floating_point'');\nif strcmp(onoff,''on'')\n    enable_fixpt = ''off''\n    set_param_state(gcb, ''float_type'', ''on'')\n    \n    f_type = get_param(gcb, ''float_type'')\n    if strcmp(f_type,''custom'')\n        set_param_state(gcb, ''exp_width'', ''on'')\n        set_param_state(gcb, ''frac_width'', ''on'')\n    else\n        set_param_state(gcb, ''exp_width'', ''off'')\n        set_param_state(gcb, ''frac_width'', ''off'')\n    end\n    \n    \nelse\n    enable_fixpt = ''on''\n    set_param_state(gcb, ''float_type'', ''off'')\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\nend\n\nset_param_state(gcb, ''n_bits_in'', enable_fixpt)\nset_param_state(gcb, ''bin_pt_in'', enable_fixpt)\n\n\n|f_type = get_param(gcb, ''float_type'')\nif strcmp(f_type,''custom'')\n    set_param_state(gcb, ''exp_width'', ''on'')\n    set_param_state(gcb, ''frac_width'', ''on'')\nelse\n    set_param_state(gcb, ''exp_width'', ''off'')\n    set_param_state(gcb, ''frac_width'', ''off'')\nend||||'), ...
		'MaskEnableString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVisibilityString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskToolTipString', sprintf('on,on,on,on,on,on,on,on,on,on'), ...
		'MaskVariables', sprintf('n_bits_in=@1;bin_pt_in=@2;cmplx=&3;misc=&4;floating_point=@5;float_type=@6;exp_width=@7;frac_width=@8;overflow=@9;latency=@10;'), ...
		'MaskValueString', sprintf('0|8|off|off|on|single|8|24|1|2'), ...
		'BackgroundColor', sprintf('[0.501961, 1.000000, 0.501961]'));

end % bus_negate_mask

function bus_negate_init(blk)

	reuse_block(blk, 'din', 'built-in/Inport');
	set_param([blk,'/din'], ...
		'Port', sprintf('1'), ...
		'Position', sprintf('[35 73 65 87]'), ...
		'Tag', sprintf(''));

	reuse_block(blk, 'debus', 'casper_library_flow_control/bus_expand');
	set_param([blk,'/debus'], ...
		'mode', sprintf('divisions of arbitrary size'), ...
		'outputWidth', sprintf('32'), ...
		'outputArithmeticType', sprintf('ones(1,1)'), ...
		'show_format', sprintf('on'), ...
		'variablePrefix', sprintf(''), ...
		'Position', sprintf('[120 50 170 110]'), ...
		'Tag', sprintf(''));

	reuse_block(blk, 'neg1', 'xbsIndex_r4/Negate');
	set_param([blk,'/neg1'], ...
		'arith_type', sprintf('Signed  (2''s comp)'), ...
		'n_bits', sprintf('32'), ...
		'bin_pt', sprintf('0'), ...
		'overflow', sprintf('Saturate'), ...
		'latency', sprintf('latency'), ...
		'Position', sprintf('[225 50 275 90]'), ...
		'Tag', sprintf(''));

